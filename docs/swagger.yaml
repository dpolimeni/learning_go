basePath: /
definitions:
  auth.NewUser:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  people.Person:
    properties:
      age:
        type: integer
      name:
        type: string
      pass:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "2.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: Get test on base path.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - Root Base
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login form
        in: body
        name: UserLogin
        required: true
        schema:
          $ref: '#/definitions/auth.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login a person on DB.
      tags:
      - Authentication
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: New User to register
        in: body
        name: NewUser
        required: true
        schema:
          $ref: '#/definitions/auth.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a person on DB.
      tags:
      - Authentication
  /api/v1/people:
    get:
      consumes:
      - '*/*'
      description: Get people from db.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all people.
      tags:
      - People
  /api/v1/person:
    post:
      consumes:
      - application/json
      description: Add a person on DB.
      parameters:
      - description: Person
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/people.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Add a person on DB.
      tags:
      - People
  /api/v1/person/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a person on DB.
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete a person.
      tags:
      - People
    get:
      consumes:
      - '*/*'
      description: Get person from db.
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get a single person.
      tags:
      - People
swagger: "2.0"
