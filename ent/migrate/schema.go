// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "capacity", Type: field.TypeInt16},
		{Name: "description", Type: field.TypeString, Default: "unknown"},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// ReservationsColumns holds the columns for the "reservations" table.
	ReservationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "events_reservations", Type: field.TypeInt32, Nullable: true},
		{Name: "user_reservations", Type: field.TypeInt, Nullable: true},
	}
	// ReservationsTable holds the schema information for the "reservations" table.
	ReservationsTable = &schema.Table{
		Name:       "reservations",
		Columns:    ReservationsColumns,
		PrimaryKey: []*schema.Column{ReservationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reservations_events_reservations",
				Columns:    []*schema.Column{ReservationsColumns[2]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "reservations_users_reservations",
				Columns:    []*schema.Column{ReservationsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// EventsUsersColumns holds the columns for the "events_users" table.
	EventsUsersColumns = []*schema.Column{
		{Name: "events_id", Type: field.TypeInt32},
		{Name: "user_id", Type: field.TypeInt},
	}
	// EventsUsersTable holds the schema information for the "events_users" table.
	EventsUsersTable = &schema.Table{
		Name:       "events_users",
		Columns:    EventsUsersColumns,
		PrimaryKey: []*schema.Column{EventsUsersColumns[0], EventsUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "events_users_events_id",
				Columns:    []*schema.Column{EventsUsersColumns[0]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "events_users_user_id",
				Columns:    []*schema.Column{EventsUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		ReservationsTable,
		UsersTable,
		EventsUsersTable,
	}
)

func init() {
	ReservationsTable.ForeignKeys[0].RefTable = EventsTable
	ReservationsTable.ForeignKeys[1].RefTable = UsersTable
	EventsUsersTable.ForeignKeys[0].RefTable = EventsTable
	EventsUsersTable.ForeignKeys[1].RefTable = UsersTable
}
